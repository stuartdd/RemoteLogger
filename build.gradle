buildscript {
    apply from: 'version.gradle'
    dependencies {
        classpath group: 'de.dynamicfiles.projects.gradle.plugins', name: 'javafx-gradle-plugin', version: '8.8.2'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots" }

    }
}

apply plugin: 'java'
apply plugin: 'maven-publish'

group = 'stuartdd'
version = '1.0'

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        mavenLocal()
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}


sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

dependencies {
    compile 'stuartdd:jsonTools:1.0'
    testCompile group: 'junit', name: 'junit', version: '4.10'
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'main.Main'
}

//mainClassName = "main.Main"
//distZip.shouldRunAfter(build)
//jar {
//    // Keep jar clean:
//    exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'
//
//    manifest {
//        attributes 'Main-Class': 'main.Main',
//                   'Class-Path': configurations.runtime.files.collect { "lib/$it.name" }.join(' ')
//    }
//}

repositories {
    mavenLocal()
    mavenCentral()
}

apply plugin: 'javafx-gradle-plugin'

jfx {
    mainClass = 'main.Main'
    vendor = 'SDD'
}

task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'RemoteLogger',  
        	'Implementation-Version': version,
        	'Main-Class': 'main.Main'
    }
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}